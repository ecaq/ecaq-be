@page "/profile"

@rendermode InteractiveServer

@* @using AabBts.Core.Entities
@using AabBts.Core.Entities.Dtos.FormsDto;
@using AabBts.DAL.Data *@

@inject AppDbContext _db
@* @inject IDialogService DialogService *@

<PageTitle>Profile</PageTitle>



@if (Profiles is not null)
{

    <div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
                <h1 class="text-xl font-semibold text-gray-900">Profile List</h1>
                <p class="mt-2 text-sm text-gray-700">A list of all the profile available.</p>
            </div>
        </div>
        <div class="mt-8 flex flex-col">
            <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                    <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">Image</th>
                                    <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">Name</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Path</th>
                                    <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 text-right">
                                        <a @onclick="AddProfile" class="cursor-pointer">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                            </svg>
                                        </a>
                                        <a href="/profile-form" class="cursor-pointer">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                            </svg>
                                        </a>
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200 bg-white">
                                @foreach (var item in Profiles)
                                {
                                    <tr>
                                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6">
                                            <div class="flex items-center">
                                                <div class="h-10 flex-shrink-0">
                                                    <img class="h-10" src="@item.ImageUrl" alt="">
                                                </div>
                                                <div class="ml-4">
                                                    @*<div class="text-gray-500">lindsay.walton@example.com</div>*@
                                                </div>
                                            </div>
                                        </td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                            <div class="text-gray-900">
                                                @item.Name
                                            </div>
                                        </td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                            @*<input id="IsActive" name="IsActive" @bind="@item.IsActive" @onclick="@((p) => ActiveToggle(item, item.IsActive))" type="checkbox" class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded" />*@
                                            @item.PathUrl
                                        </td>
                                        <td class="flex relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                                            @*<a @onclick="@(() => EditMake(item))" class="cursor-pointer text-indigo-600 hover:text-indigo-900">
                                                Edit
                                            </a>*@
                                            <a class="cursor-pointer px-2" @onclick="@(() => EditProfile(item))">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                                </svg>
                                            </a>
                                            <a class="px-2 cursor-pointer" @onclick="@((p) => DeleteItem(item))">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                </svg>
                                            </a>
                                            <a href="/profile-form/@item.Id" class="px-2">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                                </svg>
                                            </a>
                                        </td>
                                    </tr>
                                }
                                <!-- More people... -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


}








<div class="mt-96">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">

        <!-- Dynamic Tabs -->
        <div class="sm:hidden">
            <label for="tabs" class="sr-only">Select a tab</label>
            <select id="tabs" name="tabs" @bind="activeTab" class="block w-full focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md">
                @foreach (var item in tabItems.ToList())
                {
                    <option value="@item.Id" @onchange="@(() => TabChangedHandler(item.Id))">@item.Name</option>
                }
            </select>
        </div>

        <div class="hidden sm:block">
            <div class="border-b border-gray-400">
                <nav class="-mb-px flex space-x-8" aria-label="Tabs">
                    @foreach (var item in tabItems.ToList())
                    {
                        <a id="@item.Id" @onclick="@(() => TabChangedHandler(item.Id))" class="cursor-pointer border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm @(item.Id == activeTab ? "border-b-4 border-indigo-500 font-bold" : "border-transparent hover:text-gray-800 hover:border-gray-800")">
                            @item.Name
                        </a>
                    }
                </nav>
            </div>
        </div>
        <!-- Dynamic Tabs -->

    </div>
</div>

<div class="mt-2">

    @foreach (var item in tabItems)
    {
        if (item.Id == 0 && item.Id == activeTab)
        {
            <div class="relative bg-gray-800">
                <div class="h-56 bg-indigo-600 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2">
                    <img class="w-full h-full object-cover" src="https://www.qatarairways.com/content/dam/images/renditions/horizontal-1/campaigns/global/mobile/H1-Mobile-App-QRcode-en2.jpg" alt="" />
                </div>
                <div class="relative max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
                    <div class="md:ml-auto md:w-1/2 md:pl-10">
                        <h2 class="text-base font-semibold uppercase tracking-wider text-gray-300">
                            Mobile App now available for Download
                        </h2>
                        <p class="mt-2 text-white text-3xl font-extrabold tracking-tight sm:text-4xl">
                            Get It Now...
                        </p>
                        <p class="mt-3 text-lg text-gray-300">
                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et, egestas tempus tellus etiam sed. Quam a scelerisque amet ullamcorper eu enim et fermentum, augue. Aliquet amet volutpat quisque ut interdum tincidunt duis.
                        </p>
                        <div class="mt-8">
                            <div class="inline-flex rounded-md shadow mr-4">
                                <img id="sal-apl-img-QA" src="//i2.lmsin.net/website_images/uat/shukran/ui/apple-app-store.svg" class="app__img--src">
                            </div>
                            <div class="inline-flex rounded-md shadow">
                                <img id="sal-ggl-img-QA" src="//i2.lmsin.net/website_images/uat/shukran/ui/google-play-store.svg" class="app__img--src">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }

        if (item.Id == 1 && item.Id == activeTab)
        {
            <div>
                <div class="relative bg-gray-800">
                    <div class="h-56 bg-indigo-600 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2">
                        <img class="w-full h-full object-cover" src="https://www.qatarairways.com/content/dam/images/renditions/horizontal-1/privilege-club/cards-circle/h1-ffp-cards-qsuite-crew.jpg" alt="" />
                    </div>
                    <div class="relative max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
                        <div class="md:ml-auto md:w-1/2 md:pl-10">
                            <h2 class="text-base font-semibold uppercase tracking-wider text-gray-300">
                                Technical Support
                            </h2>
                            <p class="mt-2 text-white text-3xl font-extrabold tracking-tight sm:text-4xl">
                                We’re here to help
                            </p>
                            <p class="mt-3 text-lg text-gray-300">
                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et, egestas tempus tellus etiam sed. Quam a scelerisque amet ullamcorper eu enim et fermentum, augue. Aliquet amet volutpat quisque ut interdum tincidunt duis.
                            </p>
                            <div class="mt-8">
                                <div class="inline-flex rounded-md shadow">
                                    <a href="#" class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50">
                                        Visit the help center
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        if (item.Id == 2 && item.Id == activeTab)
        {
            <div>
                <div class="relative bg-gray-800">
                    <div class="h-56 bg-indigo-600 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2">
                        <img class="w-full h-full object-cover" src="https://www.qatarairways.com/content/dam/images/renditions/horizontal-1/brand/beyond-business/h1-corporate-building.jpg" alt="" />
                    </div>
                    <div class="relative max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
                        <div class="md:ml-auto md:w-1/2 md:pl-10">
                            <h2 class="text-base font-semibold uppercase tracking-wider text-gray-300">
                                Technical Support
                            </h2>
                            <p class="mt-2 text-white text-3xl font-extrabold tracking-tight sm:text-4xl">
                                We’re here to help
                            </p>
                            <p class="mt-3 text-lg text-gray-300">
                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et, egestas tempus tellus etiam sed. Quam a scelerisque amet ullamcorper eu enim et fermentum, augue. Aliquet amet volutpat quisque ut interdum tincidunt duis.
                            </p>
                            <div class="mt-8">
                                <div class="inline-flex rounded-md shadow">
                                    <a href="#" class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50">
                                        Visit the help center
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        if (item.Id == 3 && item.Id == activeTab)
        {
            <div>
                <div class="relative bg-gray-800">
                    <div class="h-56 bg-indigo-600 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2">
                        <img class="w-full h-full object-cover" src="https://images.unsplash.com/photo-1525130413817-d45c1d127c42?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1920&q=60&sat=-100" alt="" />
                    </div>
                    <div class="relative max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
                        <div class="md:ml-auto md:w-1/2 md:pl-10">
                            <h2 class="text-base font-semibold uppercase tracking-wider text-gray-300">
                                Technical Support
                            </h2>
                            <p class="mt-2 text-white text-3xl font-extrabold tracking-tight sm:text-4xl">
                                We’re here to help
                            </p>
                            <p class="mt-3 text-lg text-gray-300">
                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et, egestas tempus tellus etiam sed. Quam a scelerisque amet ullamcorper eu enim et fermentum, augue. Aliquet amet volutpat quisque ut interdum tincidunt duis.
                            </p>
                            <div class="mt-8">
                                <div class="inline-flex rounded-md shadow">
                                    <a href="#" class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50">
                                        Visit the help center
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

</div>





@code {
    List<SampleProfile> Profiles;

    protected override async Task OnInitializedAsync()
    {
        TabItemInit();
        await GetSellCarAsync();
        await base.OnInitializedAsync();
    }

    async Task GetSellCarAsync()
    {
        Profiles = await _db.SampleProfiles.AsNoTracking().ToListAsync();
    }

    private async void UpdateSort(SampleProfile profile, int sort)
    {
        //vmake.Sort = sort;
        await SaveAsync(profile, CrudOperation.Edit);
    }
    private async void ActiveToggle(SampleProfile profile, bool val)
    {
        //tradeIn.IsActive = !val;
        await SaveAsync(profile, CrudOperation.Edit);
    }


    private async void AddProfile()
    {
        // // SampleProfile profile = new();
        // // profile!.Name = "New Name";
        // // profile!.Desc = "New Description";
        // // profile.ThumbUrl = "myassets/resources/no-image.jpg";
        // // profile.ImageUrl = "myassets/resources/no-image.jpg";

        // // var parameters = new DialogParameters();
        // // parameters.Add("SampleProfile", profile);
        // // parameters.Add("TitleOperation", "Profile");

        // // var options = new MudBlazor.DialogOptions() { NoHeader = true, DisableBackdropClick = true, MaxWidth = MaxWidth.Large };

        // // var dialog = DialogService.Show<ProfileFormModal>("Profile", parameters, options);
        // // var result = await dialog.Result;

        // // if (!result.Cancelled)
        // // {
        // //     await SaveAsync(profile, CrudOperation.Add);

        // //     await GetSellCarAsync();
        // //     await InvokeAsync(() =>
        // //     {
        // //         StateHasChanged();
        // //     });
        // // }
    }


    private async void EditProfile(SampleProfile profile)
    {
        // // var parameters = new DialogParameters();
        // // parameters.Add("SampleProfile", profile);
        // // parameters.Add("TitleOperation", "Profile");

        // // var options = new MudBlazor.DialogOptions() { NoHeader = true, DisableBackdropClick = true, MaxWidth = MaxWidth.Large };

        // // var dialog = DialogService.Show<ProfileFormModal>("Profile", parameters, options);
        // // var result = await dialog.Result;

        // // if (!result.Cancelled)
        // // {
        // //     await SaveAsync(profile, CrudOperation.Edit);
        // //     await GetSellCarAsync();
        // //     await InvokeAsync(() =>
        // //     {
        // //         StateHasChanged();
        // //     });
        // // }
    }

    private async void DeleteItem(SampleProfile profile)
    {
        // // var parameters = new DialogParameters();
        // // parameters.Add("paramString", "Record");

        // // var options = new MudBlazor.DialogOptions() { NoHeader = true, DisableBackdropClick = true, MaxWidth = MaxWidth.ExtraSmall };



        // // var dialog = DialogService.Show<ThrowDelete>("Delete", parameters, options);
        // // var result = await dialog.Result;

        // // if (!result.Cancelled)
        // // {

        // //     await SaveAsync(profile, CrudOperation.Delete);
        // //     await GetSellCarAsync();
        // //     await InvokeAsync(() =>
        // //     {
        // //         StateHasChanged();
        // //     });
        // // }
    }


    async Task SaveAsync(SampleProfile profile, CrudOperation operation)
    {

        switch (operation)
        {
            case CrudOperation.Add:
                await _db.SampleProfiles.AddAsync(profile);
                break;
            case CrudOperation.Edit:
                //// cannot be tracked because another instance with the same key value for { 'Id'} is already being tracked.
                //// When attaching existing entities, ensure that only one entity instance with a given key value is attached
                _db.Entry(profile).State = EntityState.Modified;

                _db.SampleProfiles.Update(profile);
                break;
            case CrudOperation.Delete:
                _db.SampleProfiles.Remove(profile);
                break;
            default:
                break;
        }
        await _db.SaveChangesAsync();
        //// cannot be tracked because another instance with the same key value for { 'Id'} is already being tracked.
        //// When attaching existing entities, ensure that only one entity instance with a given key value is attached
        _db.Entry<SampleProfile>(profile).State = EntityState.Detached;
    }































    List<TabItem> tabItems = new List<TabItem>();
    int activeTab { get; set; }

    void TabItemInit()
    {
        tabItems.Add(new TabItem { Id = 0, Name = "Mobile App", Href = "", IsCurrent = false });
        tabItems.Add(new TabItem { Id = 1, Name = "Company", Href = "", IsCurrent = false });
        tabItems.Add(new TabItem { Id = 2, Name = "Promotions", Href = "", IsCurrent = false });
        tabItems.Add(new TabItem { Id = 3, Name = "Support", Href = "", IsCurrent = false });
        activeTab = 0;
    }

    void TabChangedHandler(int newIndex)
    {
        activeTab = newIndex;
    }

}
