@page "/manage-users/role"

@rendermode InteractiveServer

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager



<PageTitle>Home Banner</PageTitle>

@if(user is not null)
{

<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
        <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Create a new account.</h2>
    </div>
    <div class="mt-6 sm:mx-auto sm:w-full sm:max-w-sm">

            <div>
                <div class="relative border border-gray-300 rounded-md px-3 shadow-sm">
                    <label for="qid" class="absolute bg-white -top-2 left-2 -mt-px inline-block px-1 bg-beeBackground text-xs font-medium text-appBlack">Name</label>
                    <InputText @bind-Value="@user.Name" aria-required="true" placeholder=""
                               class="p-0 block w-full border-0 py-2 text-appBlack bg-white focus:ring-0 text-sm outline-none tracking-normal" />
                </div>
            </div>
            <div>
                <div class="relative border border-gray-300 rounded-md px-3 shadow-sm">
                    <label for="qid" class="absolute bg-white -top-2 left-2 -mt-px inline-block px-1 bg-beeBackground text-xs font-medium text-appBlack">Email</label>
                    <InputText @bind-Value="@user.Email" aria-required="true" placeholder=""
                               class="p-0 block w-full border-0 py-2 text-appBlack bg-white focus:ring-0 text-sm outline-none tracking-normal" />
                </div>
            </div>
@* 
            <div>
                <div class="relative border border-gray-300 rounded-md px-3 shadow-sm">
                    <label for="qid" class="absolute bg-white -top-2 left-2 -mt-px inline-block px-1 bg-beeBackground text-xs font-medium text-appBlack">Password</label>
                    <InputText type="password" @bind-Value="@user.Password" aria-required="true" placeholder=""
                               class="p-0 block w-full border-0 py-2 text-appBlack bg-white focus:ring-0 text-sm outline-none tracking-normal" />
                </div>
                <ValidationMessage For="() => user.Password" class="text-danger" />
            </div> *@

            <div class="mb-2">
                <button type="submit" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                    Submit
                </button>
            </div>
        

        <p class="mt-10 text-center text-sm text-gray-500 text-danger">
            <section>
                <h3>Use another service to register.</h3>
                <hr />
            </section>
        </p>

    </div>

</div>

}
@code
{
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;


    protected override async Task OnInitializedAsync()
    {
        if(HttpContext is not null)
        {            
            user = await UserAccessor.GetRequiredUserAsync(HttpContext);
            username = await UserManager.GetUserNameAsync(user);
            phoneNumber = await UserManager.GetPhoneNumberAsync(user);
        }

        await base.OnInitializedAsync();
    }

  

}




