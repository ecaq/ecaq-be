
<div class="">

    <div class="">

        <!-- Dynamic Tabs -->
        <div class="sm:hidden">
            <label for="tabs" class="sr-only">Select a tab</label>
            <select id="tabs" name="tabs" @bind="activeTab" class="block w-full focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md">
                @foreach (var item in TabItems!.ToList())
                {
                    <option value="@item.Id" @onchange="@(() => TabChangedHandler(item))">@item.Name</option>
                }
            </select>
        </div>

        <div class="hidden sm:block">
            <div class="border-b border-gray-400">
                <nav class="-mb-px flex space-x-4 px-6" aria-label="Tabs">
                    @foreach (var item in TabItems!.ToList())
                    {
                        <a id="@item.Id" @onclick="@(() => TabChangedHandler(item))" class="cursor-pointer text-gray-500 whitespace-nowrap py-4 border-b-2 font-medium text-sm @(item.Id == activeTab ? "border-b-4 border-indigo-500 font-bold text-gray-900" : "border-transparent hover:border-gray-400")">
                            @item.Name
                        </a>
                    }
                </nav>
            </div>
        </div>
        <!-- Dynamic Tabs -->

    </div>

    @ChildContent

</div>


@code {

    [Parameter]
    public List<TabItem>? TabItems { get; set; }
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback<TabItem> TabItemSelectedCallback { get; set; }

    int activeTab { get; set; }
    protected override async Task OnInitializedAsync()
    {
        activeTab = TabItems!.FirstOrDefault()!.Id;
        await base.OnInitializedAsync();
    }
 
    async void TabChangedHandler(TabItem tabItem)
    {
        activeTab = tabItem.Id;
        await TabItemSelectedCallback.InvokeAsync(tabItem);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
        }
    }

}