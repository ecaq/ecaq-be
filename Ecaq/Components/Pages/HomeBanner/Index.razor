@page "/home-banner"
@page "/home-banner/index"

@rendermode InteractiveServer
@* @attribute [Authorize] *@

@* @using AabBts.Core.Entities
@using AabBts.Core.Entities.Dtos.FormsDto;
@using AabBts.DAL.Data *@

@inject IHomeBannerRepository _homeRepo
@* @inject IDialogService DialogService *@

<PageTitle>Home Banner</PageTitle>



@if (HomeBanners is not null)
{

    <div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
                <h1 class="text-xl font-semibold text-gray-900">Profile List</h1>
                <p class="mt-2 text-sm text-gray-700">A list of all the profile available.</p>
            </div>
        </div>
        <div class="mt-8 flex flex-col">
            <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                    <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Image</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Name</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Path</th>
                                    <th scope="col" class="relative px-3 py-3.5 text-left text-sm font-semibold text-gray-900">
                                        <a href="/home-banner/add" class="cursor-pointer">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                            </svg>
                                        </a>
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200 bg-white">
                                @foreach (var item in HomeBanners)
                                {
                                    <tr>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                            <div class="flex items-center">
                                                <div class="h-10 flex-shrink-0">
                                                    <img class="h-10" src="@item.ImageDesktop" alt="">
                                                </div>
                                                <div class="ml-4">
                                                    @*<div class="text-gray-500">lindsay.walton@example.com</div>*@
                                                </div>
                                            </div>
                                        </td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                            <div class="text-gray-900">
                                                @item.Name
                                            </div>
                                        </td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                            @*<input id="IsActive" name="IsActive" @bind="@item.IsActive" @onclick="@((p) => ActiveToggle(item, item.IsActive))" type="checkbox" class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded" />*@
                                            @item.ImageDesktop
                                        </td>
                                        <td class="flex relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                                            @*<a @onclick="@(() => EditMake(item))" class="cursor-pointer text-indigo-600 hover:text-indigo-900">
                                                Edit
                                            </a>*@
                                            
                                            <a class="px-2 cursor-pointer" @onclick="@((p) => DeleteItem(item))">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                </svg>
                                            </a>
                                            <a href="/home-banner/edit/@item.Id" class="px-2">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                                </svg>
                                            </a>
                                        </td>
                                    </tr>
                                }
                                <!-- More people... -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


}



@code {
    IEnumerable<HomeBanner>? HomeBanners;

    protected override async Task OnInitializedAsync()
    {
        await GetBannersAsync();
        await base.OnInitializedAsync();
    }

    async Task GetBannersAsync()
    {
        HomeBanners = await _homeRepo.GetAllAsync();
    }

    private async void UpdateSort(HomeBanner banner, int sort)
    {
        //vmake.Sort = sort;
        await SaveAsync(banner, CrudOperation.Edit);
    }
    private async void ActiveToggle(HomeBanner banner, bool val)
    {
        //tradeIn.IsActive = !val;
        await SaveAsync(banner, CrudOperation.Edit);
    }


    private async void DeleteItem(HomeBanner profile)
    {
        // // var parameters = new DialogParameters();
        // // parameters.Add("paramString", "Record");

        // // var options = new MudBlazor.DialogOptions() { NoHeader = true, DisableBackdropClick = true, MaxWidth = MaxWidth.ExtraSmall };



        // // var dialog = DialogService.Show<ThrowDelete>("Delete", parameters, options);
        // // var result = await dialog.Result;

        // // if (!result.Cancelled)
        // // {

        // //     await SaveAsync(profile, CrudOperation.Delete);
        // //     await GetSellCarAsync();
        // //     await InvokeAsync(() =>
        // //     {
        // //         StateHasChanged();
        // //     });
        // // }
    }

    async Task SaveAsync(HomeBanner homeBanner, CrudOperation operation)
    {

        switch (operation)
        {
            case CrudOperation.Add:
                await _homeRepo.CreateAsync(homeBanner);
                //await _db.SampleProfiles.AddAsync(profile);
                break;
            case CrudOperation.Edit:
                await _homeRepo.UpdateAsync(homeBanner);
                break;
            case CrudOperation.Delete:
                _homeRepo.Delete(homeBanner);
                break;
            default:
                break;
        }
    }

}
